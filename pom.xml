<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>SavageGraveyards</name>
	<description>A minecraft plugin that provides configurable graveyards where players will respawn after death.</description>
	<url>https://github.com/winterhavenmc/SavageGraveyards</url>

	<groupId>com.winterhavenmc.savagegraveyards</groupId>
	<artifactId>savagegraveyards-parent</artifactId>
	<version>2.0.0-SNAPSHOT</version>

	<modules>
		<module>adapters</module>
		<module>core</module>
		<module>models</module>
		<module>plugin</module>
	</modules>

	<packaging>pom</packaging>

	<properties>
		<project.author>Tim Savage</project.author>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.release>21</maven.compiler.release>
	</properties>

	<licenses>
		<license>
			<name>GNU General Public License v3.0</name>
			<url>https://www.gnu.org/licenses/gpl-3.0-standalone.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/winterhavenmc/SavageGraveyards/issues</url>
	</issueManagement>

	<distributionManagement>
		<repository>
			<id>repsy</id>
			<name>Repsy.io winterhavenmc Maven Packages</name>
			<url>https://repo.repsy.io/mvn/winterhavenmc/public/</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>spigot-repo</id>
			<url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>repsy-repo</id>
			<url>https://repo.repsy.io/mvn/winterhavenmc/public/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<!-- spigot api -->
			<dependency>
				<groupId>org.spigotmc</groupId>
				<artifactId>spigot-api</artifactId>
				<version>1.21.10-R0.1-SNAPSHOT</version>
				<scope>provided</scope>
			</dependency>

			<!-- bStats -->
			<dependency>
				<groupId>org.bstats</groupId>
				<artifactId>bstats-bukkit</artifactId>
				<version>3.1.0</version>
			</dependency>

			<!-- MessageBuilderLib -->
			<dependency>
				<groupId>com.winterhavenmc.messagebuilder</groupId>
				<artifactId>bootstrap</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>

			<!-- sqlite-jdbc -->
			<dependency>
				<groupId>org.xerial</groupId>
				<artifactId>sqlite-jdbc</artifactId>
				<version>3.50.3.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- junit-jupiter-api -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>5.11.3</version>
				<scope>test</scope>
			</dependency>

			<!-- junit-params -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>5.11.3</version>
				<scope>test</scope>
			</dependency>

			<!-- mockito-core -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>5.14.2</version>
				<scope>test</scope>
			</dependency>

			<!-- Mockito Inline Module -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-inline</artifactId>
				<version>5.2.0</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>5.14.2</version>
				<scope>test</scope>
			</dependency>

			<!-- kover coverage reporting -->
			<dependency>
				<groupId>org.jetbrains.kotlinx</groupId>
				<artifactId>kover-maven-plugin</artifactId>
				<version>0.9.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Spigot API -->
		<dependency>
			<groupId>org.spigotmc</groupId>
			<artifactId>spigot-api</artifactId>
		</dependency>

		<!-- bStats -->
		<dependency>
			<groupId>org.bstats</groupId>
			<artifactId>bstats-bukkit</artifactId>
		</dependency>

		<!-- MessageBuilder -->
		<dependency>
			<groupId>com.winterhavenmc.messagebuilder</groupId>
			<artifactId>bootstrap</artifactId>
		</dependency>

		<!-- junit jupiter -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
		</dependency>

		<!-- JUnit parameters -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
		</dependency>

		<!-- Mockito Framework -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>

		<!-- Mockito/JUnit Integration Module -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
		</dependency>

		<!-- Mockito Inline Module -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
		</dependency>

		<!-- kover coverage reporting -->
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kover-maven-plugin</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- resource directories -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<!-- test resource directories -->
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<!-- maven enforcer plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.5.0</version>
					<executions>
						<execution>
							<id>ban-bad-log4j-versions</id>
							<phase>validate</phase>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<bannedDependencies>
										<excludes>
											<exclude>org.apache.logging.log4j:log4j-core:(,2.17.0)</exclude>
										</excludes>
									</bannedDependencies>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- maven shade plugin (version and executions defined here) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.6.0</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!-- Final shaded JAR name -->
						<finalName>SavageGraveyards-${project.version}</finalName>

						<!-- Minimize to remove unused classes (optional, test carefully) -->
						<minimizeJar>true</minimizeJar>

						<!-- Do not generate a dependency-reduced POM -->
						<createDependencyReducedPom>false</createDependencyReducedPom>

						<filters>
							<filter>
								<!-- Apply only to dependencies (not the plugin module itself) -->
								<artifact>*:*</artifact>
								<excludes>
									<exclude>META-INF/*.SF</exclude>
									<exclude>META-INF/*.DSA</exclude>
									<exclude>META-INF/*.RSA</exclude>
									<!-- optionally exclude MANIFEST.MF from dependencies if not needed -->
									<exclude>META-INF/MANIFEST.MF</exclude>
								</excludes>
							</filter>
						</filters>

						<!-- relocate these packages on the class path to avoid conflicts with other plugins -->
						<relocations>
							<relocation>
								<pattern>com.winterhavenmc.library</pattern>
								<shadedPattern>com.winterhavenmc.savagegraveyards.shaded</shadedPattern>
							</relocation>
							<relocation>
								<pattern>org.bstats</pattern>
								<shadedPattern>com.winterhavenmc.savagegraveyards.shaded</shadedPattern>
							</relocation>
						</relocations>
					</configuration>
				</plugin>

				<!-- maven compiler plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.13.0</version>
				</plugin>

				<!-- maven Javadoc plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.11.2</version>
					<configuration>
						<doclint>all,-missing</doclint>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- maven source plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.3.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- maven surefire plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<junitArtifactName>org.junit.jupiter:junit-jupiter</junitArtifactName>
						<trimStackTrace>false</trimStackTrace>
					</configuration>
				</plugin>

				<!-- plugin to generate coverage reports -->
				<plugin>
					<groupId>org.jetbrains.kotlinx</groupId>
					<artifactId>kover-maven-plugin</artifactId>
					<version>0.9.1</version>
					<executions>
						<!-- instrument test tasks -->
						<execution>
							<id>instr</id>
							<goals>
								<goal>instrumentation</goal>
							</goals>
						</execution>

						<!-- generate XML report in verify phase -->
						<execution>
							<id>kover-xml</id>
							<goals>
								<goal>report-xml</goal>
							</goals>
						</execution>

						<!-- generate HTML report in verify phase -->
<!--						<execution>-->
<!--							<id>kover-html</id>-->
<!--							<goals>-->
<!--								<goal>report-html</goal>-->
<!--							</goals>-->
<!--						</execution>-->

						<!-- check coverage rules in verify phase -->
<!--						<execution>-->
<!--							<id>kover-verify</id>-->
<!--							<goals>-->
<!--								<goal>verify</goal>-->
<!--							</goals>-->
<!--						</execution>-->
					</executions>
					<configuration>
						<aggregate>true</aggregate>
						<xmlFile>${session.executionRootDirectory}/target/site/kover/report.xml</xmlFile>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.13</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- maven enforcer plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<!-- maven compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<!-- maven Javadoc plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>

			<!-- maven source plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<!-- maven surefire plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<!-- kover test coverage plugin -->
			<plugin>
				<groupId>org.jetbrains.kotlinx</groupId>
				<artifactId>kover-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
